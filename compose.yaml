x-env: &env
  CARTESI_LOG_LEVEL: info
  CARTESI_BLOCKCHAIN_HTTP_ENDPOINT_FILE: /run/secrets/blockchain_http_endpoint
  CARTESI_BLOCKCHAIN_WS_ENDPOINT_FILE: /run/secrets/blockchain_http_endpoint
  CARTESI_BLOCKCHAIN_ID: 13370
  CARTESI_CONTRACTS_INPUT_BOX_ADDRESS: 0xc70074BDD26d8cF983Ca6A5b89b8db52D5850051
  CARTESI_CONTRACTS_AUTHORITY_FACTORY_ADDRESS: 0xC7003566dD09Aa0fC0Ce201aC2769aFAe3BF0051
  CARTESI_CONTRACTS_APPLICATION_FACTORY_ADDRESS: 0xc7006f70875BaDe89032001262A846D3Ee160051
  CARTESI_CONTRACTS_SELF_HOSTED_APPLICATION_FACTORY_ADDRESS: 0xc700285Ab555eeB5201BC00CFD4b2CC8DED90051
  CARTESI_DATABASE_CONNECTION_FILE: /run/secrets/database_connection
  CARTESI_AUTH_MNEMONIC_FILE: /run/secrets/auth_mnemonic

services:
  ethereum_provider:
    image: cartesi/rollups-node-devnet:devel
    networks:
      - devnet
    ports:
      - 8545:8545

  database:
    image: postgres:17-alpine
    shm_size: 128mb
    networks:
      - devnet
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d rollupsdb || exit 1"]
      interval: 3s
      timeout: 3s
      retries: 5
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_DB: rollupsdb

  migration:
    image: cartesi/rollups-node:devel
    command: cartesi-rollups-cli db init
    depends_on:
      database:
        condition: service_healthy
    networks:
      - devnet
    secrets:
      - database_connection
    restart: "no"
    environment:
      <<: *env

  node:
    image: cartesi/rollups-node:devel
    command: cartesi-rollups-node
    depends_on:
      database:
        condition: service_healthy
      ethereum_provider:
        condition: service_healthy
    volumes:
      - node_data:/var/lib/cartesi-rollups-node/data
    networks:
      - devnet
    ports:
      - "10000:10000" # Supervisor
      - "10011:10011" # Jsonrpc API service
      - "10012:10012" # Inspect Service
    secrets:
      - auth_mnemonic
      - blockchain_http_endpoint
      - blockchain_ws_endpoint
      - database_connection
    environment:
      <<: *env

volumes:
  node_data:

networks:
  devnet:

secrets:
  auth_mnemonic:
    file: test/secrets/auth_mnemonic.txt
  blockchain_http_endpoint:
    file: test/secrets/blockchain_http_endpoint.txt
  blockchain_ws_endpoint:
    file: test/secrets/blockchain_ws_endpoint.txt
  database_connection:
    file: test/secrets/database_connection.txt

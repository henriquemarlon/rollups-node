x-env: &env
  CARTESI_LOG_LEVEL: info
  CARTESI_BLOCKCHAIN_HTTP_ENDPOINT: http://ethereum_provider:8545
  CARTESI_BLOCKCHAIN_WS_ENDPOINT: ws://ethereum_provider:8545
  CARTESI_BLOCKCHAIN_ID: 13370
  CARTESI_CONTRACTS_INPUT_BOX_ADDRESS: 0xc70074BDD26d8cF983Ca6A5b89b8db52D5850051
  CARTESI_CONTRACTS_AUTHORITY_FACTORY_ADDRESS: 0xC7003566dD09Aa0fC0Ce201aC2769aFAe3BF0051
  CARTESI_CONTRACTS_APPLICATION_FACTORY_ADDRESS: 0xc7006f70875BaDe89032001262A846D3Ee160051
  CARTESI_CONTRACTS_SELF_HOSTED_APPLICATION_FACTORY_ADDRESS: 0xc700285Ab555eeB5201BC00CFD4b2CC8DED90051
  CARTESI_DATABASE_CONNECTION: postgres://postgres:password@database:5432/rollupsdb?sslmode=disable
  CARTESI_TEST_DATABASE_CONNECTION: postgres://test_user:password@database:5432/test_rollupsdb?sslmode=disable
  CARTESI_AUTH_MNEMONIC: "test test test test test test test test test test test junk"

services:
  ethereum_provider:
    image: cartesi/rollups-node-devnet:devel
    networks:
      - devnet
    ports:
      - 8545:8545

  database:
    image: postgres:17-alpine
    shm_size: 128mb
    networks:
      - devnet
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d rollupsdb || exit 1"]
      interval: 3s
      timeout: 3s
      retries: 5
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_DB: rollupsdb
    volumes:
      - ../postgres/init-test-db.sh:/docker-entrypoint-initdb.d/init-test-db.sh

  unit-test:
    image: cartesi/rollups-node:tester
    profiles: [unit-test]
    entrypoint: ["sh", "-c"]
    command: |
      '
      set -e
      make migrate
      make test
      '
    depends_on:
      database:
        condition: service_healthy
      ethereum_provider:
        condition: service_healthy
    networks:
      - devnet
    restart: "no"
    environment:
      <<: *env
    volumes:
      - ../downloads:/usr/share/cartesi-machine/images

networks:
  devnet:
